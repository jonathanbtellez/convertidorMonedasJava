package co.com.ventana;


import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Familia Silvestre
 */
public class Ventana extends javax.swing.JFrame {
    int seleccionMoneda1 = 0;
    int seleccionMoneda2 = 0;
    double valor = 0;
    Pattern patron = Pattern.compile("[A-z]");
    Matcher match;// patron.matcher("valorIngresado.getText()");

    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        etiquetaTitulo = new javax.swing.JLabel();
        valorIngresado = new javax.swing.JTextField();
        etiquetaIngresar = new javax.swing.JLabel();
        etiqueta = new javax.swing.JLabel();
        etiquetaOrigen = new javax.swing.JLabel();
        seleccion1 = new javax.swing.JComboBox<>();
        seleccion2 = new javax.swing.JComboBox<>();
        etiquetaMonedaConvertir = new javax.swing.JLabel();
        etiquetaInfoResultado = new javax.swing.JLabel();
        etiquetaResultado = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        etiquetaMensaje = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        etiquetaTitulo.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        etiquetaTitulo.setText("Convertidor de monedas");

        valorIngresado.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        valorIngresado.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        valorIngresado.setText("0.0");
        valorIngresado.setToolTipText("");
        valorIngresado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                valorIngresadoMouseClicked(evt);
            }
        });
        valorIngresado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valorIngresadoActionPerformed(evt);
            }
        });
        valorIngresado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                valorIngresadoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                valorIngresadoKeyReleased(evt);
            }
        });

        etiquetaIngresar.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        etiquetaIngresar.setText("Ingrese el valor que desea convertir en el siguiente campo.");

        etiqueta.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        etiqueta.setText("$");

        etiquetaOrigen.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        etiquetaOrigen.setText("Seleccione el tipo de moneda de origen.");

        seleccion1.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        seleccion1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Escoja una moneda", "Pesos", "Dolar", "Euros", "Libras Esterlinas", "Yen Japones", "Won sur coreano" }));
        seleccion1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                seleccion1ItemStateChanged(evt);
            }
        });
        seleccion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccion1ActionPerformed(evt);
            }
        });

        seleccion2.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        seleccion2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Escoja una moneda", "Pesos", "Dolar", "Euros", "Libras Esterlinas", "Yen Japones", "Won sur coreano" }));
        seleccion2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                seleccion2ItemStateChanged(evt);
            }
        });
        seleccion2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccion2ActionPerformed(evt);
            }
        });

        etiquetaMonedaConvertir.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        etiquetaMonedaConvertir.setText("Seleccione el tipo de moneda a convertir.");

        etiquetaInfoResultado.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        etiquetaInfoResultado.setText("El valor ingresado equivale a:");

        etiquetaResultado.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        etiquetaResultado.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        etiquetaResultado.setText("0.0");

        jLabel8.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jLabel8.setText("$");

        etiquetaMensaje.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        etiquetaMensaje.setForeground(new java.awt.Color(204, 0, 0));

        jLabel1.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        jLabel1.setText("By Jonathan Tellez");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(etiquetaIngresar)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(etiqueta)
                                        .addGap(18, 18, 18)
                                        .addComponent(valorIngresado, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(22, 22, 22))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(etiquetaInfoResultado, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                        .addComponent(etiquetaMensaje, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(etiquetaResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(24, 24, 24)
                                .addComponent(jLabel1))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(etiquetaMonedaConvertir)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(etiquetaOrigen)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(33, 33, 33)
                                    .addComponent(seleccion1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(etiquetaTitulo))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(seleccion2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(etiquetaTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(etiquetaOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(seleccion1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(etiquetaMonedaConvertir, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(seleccion2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(etiquetaIngresar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(etiqueta)
                            .addComponent(valorIngresado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addComponent(etiquetaMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(etiquetaInfoResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(etiquetaResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void valorIngresadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valorIngresadoActionPerformed
        validarSeleccion(seleccionMoneda1, seleccionMoneda2, valor);
    }//GEN-LAST:event_valorIngresadoActionPerformed

    private void seleccion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccion1ActionPerformed
        seleccionMoneda1 = seleccion1.getSelectedIndex();
        validarSeleccion(seleccionMoneda1, seleccionMoneda2, valor);
    }//GEN-LAST:event_seleccion1ActionPerformed

    private void seleccion2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccion2ActionPerformed
        seleccionMoneda2 = seleccion2.getSelectedIndex();
        validarSeleccion(seleccionMoneda1, seleccionMoneda2, valor);
    }//GEN-LAST:event_seleccion2ActionPerformed

    private void valorIngresadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_valorIngresadoMouseClicked
        if ("0.0".equals(valorIngresado.getText())) {
            valorIngresado.setText("");
        } else {
            validarSeleccion(seleccionMoneda1, seleccionMoneda2, valor);
        }
    }//GEN-LAST:event_valorIngresadoMouseClicked

    private void valorIngresadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valorIngresadoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_valorIngresadoKeyPressed

    private void valorIngresadoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valorIngresadoKeyReleased
        validarSeleccion(seleccionMoneda1, seleccionMoneda2, valor);
    }//GEN-LAST:event_valorIngresadoKeyReleased

    private void seleccion2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_seleccion2ItemStateChanged
        validarSeleccion(seleccionMoneda1, seleccionMoneda2, valor);
    }//GEN-LAST:event_seleccion2ItemStateChanged

    private void seleccion1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_seleccion1ItemStateChanged
        validarSeleccion(seleccionMoneda1, seleccionMoneda2, valor);
    }//GEN-LAST:event_seleccion1ItemStateChanged

    public void validarSeleccion(int seleccionMoneda1, int seleccionMoneda2, double valor) {
        double pesos, dolar, euros, librasE, yen, won, resultado;
        try {
            String d = valorIngresado.getText();
            match = patron.matcher(d);
            if (match.find()) {
                etiquetaMensaje.setText("Por favor, solo use numeros. !!");
            } else {
                etiquetaMensaje.setText("");
                valor = Double.parseDouble(valorIngresado.getText());
            }
        } catch (Exception ex) {
            valor = 0;
        }

        if (seleccionMoneda1 != 0 && seleccionMoneda2 != 0) {
            if (seleccionMoneda1 == seleccionMoneda2) {
                etiquetaResultado.setText(String.valueOf(valor));
            } //////////////////VALIDACIONES DE PESO//////////////////////////////////////////
            else if (seleccionMoneda1 == 1 && seleccionMoneda2 == 2) {
                dolar = 0.00023;
                resultado = valor * dolar;
                etiquetaResultado.setText(String.valueOf(Math.round(resultado * 100.0) / 100.0));
            } else if (seleccionMoneda1 == 1 && seleccionMoneda2 == 3) {
                euros = 0.00023;
                resultado = valor * euros;
                etiquetaResultado.setText(String.valueOf(Math.round(resultado * 100.0) / 100.0));
            } else if (seleccionMoneda1 == 1 && seleccionMoneda2 == 4) {
                librasE = 0.00020;
                resultado = valor * librasE;
                etiquetaResultado.setText(String.valueOf(Math.round(resultado * 100.0) / 100.0));
            } else if (seleccionMoneda1 == 1 && seleccionMoneda2 == 5) {
                yen = 0.033;
                resultado = valor * yen;
                etiquetaResultado.setText(String.valueOf(Math.round(resultado * 100.0) / 100.0));
            } else if (seleccionMoneda1 == 1 && seleccionMoneda2 == 6) {
                won = 0.031;
                resultado = valor * won;
                etiquetaResultado.setText(String.valueOf(Math.round(resultado * 100.0) / 100.0));
            }/////////////////////VALIDACIONES DOLAR/////////////////////////////////////////
            else if (seleccionMoneda1 == 2 && seleccionMoneda2 == 1) {
                pesos = 4397;
                resultado = valor * pesos;
                etiquetaResultado.setText(String.valueOf(Math.round(resultado * 100.0) / 100.0));
            }else if (seleccionMoneda1 == 2 && seleccionMoneda2 == 3) {
                euros = 0.99;
                resultado = valor * euros;
                etiquetaResultado.setText(String.valueOf(Math.round(resultado * 100.0) / 100.0));
            }else if (seleccionMoneda1 == 2 && seleccionMoneda2 == 4) {
                librasE = 0.86;
                resultado = valor * librasE;
                etiquetaResultado.setText(String.valueOf(Math.round(resultado * 100.0) / 100.0));
            }else if (seleccionMoneda1 == 2 && seleccionMoneda2 == 5) {
                yen = 143.19;
                resultado = valor * yen;
                etiquetaResultado.setText(String.valueOf(Math.round(resultado * 100.0) / 100.0));
            }else if (seleccionMoneda1 == 2 && seleccionMoneda2 == 6) {
                won = 1375;
                resultado = valor * won;
                etiquetaResultado.setText(String.valueOf(Math.round(resultado * 100.0) / 100.0));
            }//////////////////////VALIDACIONES EURO//////////////////////////////////////////
            else if (seleccionMoneda1 == 3 && seleccionMoneda2 == 1) {
                pesos = 4427;
                resultado = valor * pesos;
                etiquetaResultado.setText(String.valueOf(Math.round(resultado * 100.0) / 100.0));
            }else if (seleccionMoneda1 == 3 && seleccionMoneda2 == 2) {
                dolar = 1.01;
                resultado = valor * dolar;
                etiquetaResultado.setText(String.valueOf(Math.round(resultado * 100.0) / 100.0));
            }else if (seleccionMoneda1 == 3 && seleccionMoneda2 == 4) {
                librasE = 0.87;
                resultado = valor * librasE;
                etiquetaResultado.setText(String.valueOf(Math.round(resultado * 100.0) / 100.0));
            }else if (seleccionMoneda1 == 3 && seleccionMoneda2 == 5) {
                yen = 144.14;
                resultado = valor * yen;
                etiquetaResultado.setText(String.valueOf(Math.round(resultado * 100.0) / 100.0));
            }else if (seleccionMoneda1 == 3 && seleccionMoneda2 == 6) {
                won = 1385;
                resultado = valor * won;
                etiquetaResultado.setText(String.valueOf(Math.round(resultado * 100.0) / 100.0));
            }/////////////////////VALIDACION LIBRA ESTERLINAS///////////////////////////
            else if (seleccionMoneda1 == 4 && seleccionMoneda2 == 1) {
                pesos = 5093;
                resultado = valor * pesos;
                etiquetaResultado.setText(String.valueOf(Math.round(resultado * 100.0) / 100.0));
            }else if (seleccionMoneda1 == 4 && seleccionMoneda2 == 2) {
                dolar = 1.16;
                resultado = valor * dolar;
                etiquetaResultado.setText(String.valueOf(Math.round(resultado * 100.0) / 100.0));
            }else if (seleccionMoneda1 == 4 && seleccionMoneda2 == 3) {
                euros = 1.15;
                resultado = valor * euros;
                etiquetaResultado.setText(String.valueOf(Math.round(resultado * 100.0) / 100.0));
            }else if (seleccionMoneda1 == 4 && seleccionMoneda2 == 5) {
                yen = 1165.77;
                resultado = valor * yen;
                etiquetaResultado.setText(String.valueOf(Math.round(resultado * 100.0) / 100.0));
            }else if (seleccionMoneda1 == 4 && seleccionMoneda2 == 6) {
                won = 1594;
                resultado = valor * won;
                etiquetaResultado.setText(String.valueOf(Math.round(resultado * 100.0) / 100.0));
            }////////////////////////////VALIDACION YEN JAPONES ////////////////////////
            else if (seleccionMoneda1 == 5 && seleccionMoneda2 == 1) {
                pesos = 30.72;
                resultado = valor * pesos;
                etiquetaResultado.setText(String.valueOf(Math.round(resultado * 100.0) / 100.0));
            }else if (seleccionMoneda1 == 5 && seleccionMoneda2 == 2) {
                dolar = 0.0070;
                resultado = valor * dolar;
                etiquetaResultado.setText(String.valueOf(Math.round(resultado * 100.0) / 100.0));
            }else if (seleccionMoneda1 == 5 && seleccionMoneda2 == 3) {
                euros = 0.0069;
                resultado = valor * euros;
                etiquetaResultado.setText(String.valueOf(Math.round(resultado * 100.0) / 100.0));
            }else if (seleccionMoneda1 == 5 && seleccionMoneda2 == 4) {
                librasE = 0.0060;
                resultado = valor * librasE;
                etiquetaResultado.setText(String.valueOf(Math.round(resultado * 100.0) / 100.0));
            }else if (seleccionMoneda1 == 5 && seleccionMoneda2 == 6) {
                won = 9.62;
                resultado = valor * won;
                etiquetaResultado.setText(String.valueOf(Math.round(resultado * 100.0) / 100.0));
            }////////////////////////////VALIDACION WON ///////////////////////////
            else if (seleccionMoneda1 == 6 && seleccionMoneda2 == 1) {
                pesos = 3.20;
                resultado = valor * pesos;
                etiquetaResultado.setText(String.valueOf(Math.round(resultado * 100.0) / 100.0));
            }else if(seleccionMoneda1 == 6 && seleccionMoneda2 == 2) {
                dolar = 0.00073;
                resultado = valor * dolar;
                etiquetaResultado.setText(String.valueOf(Math.round(resultado * 100.0) / 100.0));
            }else if(seleccionMoneda1 == 6 && seleccionMoneda2 == 3) {
                euros = 0.00072;
                resultado = valor * euros;
                etiquetaResultado.setText(String.valueOf(Math.round(resultado * 100.0) / 100.0));
            }else if(seleccionMoneda1 == 6 && seleccionMoneda2 == 4) {
                librasE = 0.00063;
                resultado = valor * librasE;
                etiquetaResultado.setText(String.valueOf(Math.round(resultado * 100.0) / 100.0));
            }else if(seleccionMoneda1 == 6 && seleccionMoneda2 == 5) {
                yen = 0.10;
                resultado = valor * yen;
                etiquetaResultado.setText(String.valueOf(Math.round(resultado * 100.0) / 100.0));
            }
       } else {
            etiquetaResultado.setText("0.0");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        try {
            //</editor-fold>
            UIManager.setLookAndFeel("com.jtattoo.plaf.fast.FastLookAndFeel");

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Ventana.class
                    .getName()).log(Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            Logger.getLogger(Ventana.class
                    .getName()).log(Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            Logger.getLogger(Ventana.class
                    .getName()).log(Level.SEVERE, null, ex);

        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Ventana.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel etiqueta;
    private javax.swing.JLabel etiquetaInfoResultado;
    private javax.swing.JLabel etiquetaIngresar;
    private javax.swing.JLabel etiquetaMensaje;
    private javax.swing.JLabel etiquetaMonedaConvertir;
    private javax.swing.JLabel etiquetaOrigen;
    private javax.swing.JLabel etiquetaResultado;
    private javax.swing.JLabel etiquetaTitulo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> seleccion1;
    private javax.swing.JComboBox<String> seleccion2;
    private javax.swing.JTextField valorIngresado;
    // End of variables declaration//GEN-END:variables
}
